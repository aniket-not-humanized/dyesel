#include <Servo.h>

#define TRIG_PIN 9
#define ECHO_PIN 10
#define BUZZER_PIN 3
#define SERVO_PIN 6

Servo servoMotor;

void setup() {
    pinMode(TRIG_PIN, OUTPUT);
    pinMode(ECHO_PIN, INPUT);
    pinMode(BUZZER_PIN, OUTPUT);
    servoMotor.attach(SERVO_PIN);
    
    Serial.begin(9600);
}

// Function to measure distance using HC-SR04
long getDistance() {
    digitalWrite(TRIG_PIN, LOW);
    delayMicroseconds(2);
    digitalWrite(TRIG_PIN, HIGH);
    delayMicroseconds(10);
    digitalWrite(TRIG_PIN, LOW);
    
    long duration = pulseIn(ECHO_PIN, HIGH);
    long distance = duration * 0.034 / 2;
    
    return distance;
}

// Function to play an alarm tone
void playAlarm() {
    tone(BUZZER_PIN, 1000); // Play 1000 Hz sound
    delay(200);
    tone(BUZZER_PIN, 1500); // Change to 1500 Hz
    delay(200);
    tone(BUZZER_PIN, 2000); // Change to 2000 Hz
    delay(200);
    noTone(BUZZER_PIN);     // Stop sound
}

void loop() {
    for (int angle = 0; angle <= 180; angle += 5) {
        servoMotor.write(angle);
        delay(100);
        
        long distance = getDistance();
        Serial.print("Angle: ");
        Serial.print(angle);
        Serial.print(" | Distance: ");
        Serial.print(distance);
        Serial.println(" cm");
        
        if (distance > 0 && distance < 50) {
            playAlarm(); // Play alarm when object detected
        } 
    }

    for (int angle = 180; angle >= 0; angle -= 5) {
        servoMotor.write(angle);
        delay(100);
        
        long distance = getDistance();
        Serial.print("Angle: ");
        Serial.print(angle);
        Serial.print(" | Distance: ");
        Serial.print(distance);
        Serial.println(" cm");
        
        if (distance > 0 && distance < 50) {
            playAlarm(); // Play alarm when object detected
        } 
    }
}
